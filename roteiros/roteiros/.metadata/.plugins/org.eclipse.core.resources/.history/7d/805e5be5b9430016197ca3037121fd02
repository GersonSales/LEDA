package sorting.simpleSorting;

import sorting.AbstractSorting;

/**
 * As the insertion sort algorithm iterates over the array, it makes the
 * assumption that the visited positions are already sorted in ascending order,
 * which means it only needs to find the right position for the current element
 * and insert it there.
 */
public class InsertionSort<T extends Comparable<T>> extends AbstractSorting<T> {

	@Override
	public void sort(T[] array, int leftIndex, int rightIndex) {
		for (int i  = 0; i < rightIndex; i++) {
			T temp = array[i + 1];
			int j = i;
			while (j > 0 && temp.compareTo(array[j]) < 0) {
				util.Util.swap(array, j, j - 1);
				j--;
			}
		}		
	}
}
